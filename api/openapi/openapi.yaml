openapi: 3.0.0
info:
  title: openapi-gen mysql slog echo
  version: 1.0.0
  description: simple crud

servers:
  - url: http://localhost:8080

paths:
  /product/create:
    post:
      summary: Create
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductCreate"
      responses:
        "201":
          description: Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Validate error

  /products/{product_id}:
    get:
      summary: Get by ID
      operationId: getProductById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found

    put:
      summary: Update product
      operationId: updateProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductUpdate"
      responses:
        "200":
          description: Updated product
        "404":
          description: Product not found
        "400":
          description: Validate Error

    delete:
      summary: Delete product
      operationId: deleteProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Product deleted
        "404":
          description: product not found

  /product/:
    get:
      summary: Get all product with params or not
      operationId: getProducts
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: ORDER_by
          in: query
          required: false
          schema:
            type: string
            enum: [cheaper, morex]
            default: cheaper
      responses:
        "200":
          description: Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        price:
          type: number
          format: float

    ProductCreate:
      type: object
      required:
        - name
        - price
      properties:
        name:
          type: string
        price:
          type: number
          format: float

    ProductUpdate:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: float
